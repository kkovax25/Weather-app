{"version":3,"sources":["Components/Clock/Clock.js","Components/DesktopDetails/DesktopDetails.js","Components/SearchBar/SearchBar.js","Components/DesktopSideBar/DesktopSideBar.js","Pages/DesktopPage/DesktopPage.js","Components/NavBar/Burger.js","Components/NavBar/NavBar.js","Components/Header/Header.js","Components/DailyTable/DailyTable.js","Components/WeatherCard/WeatherCard.js","Components/Body/Mobile/Mobile.js","Components/Body/Desktop/Desktop.js","Components/Body/Body.js","Pages/LandingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["initialState","Date","toLocaleString","day","month","hour","minute","weekday","Clock","props","state","time","this","setState","intervalID","setInterval","tick","clearInterval","Component","DesktopDetails","className","degree","location","src","alt","condition","SearchBar","class","type","placeholder","name","id","onChange","required","for","onClick","content","DesktopSideBar","cloud","humidity","wind","API_KEY","process","DesktopPage","searchCity","a","url","place","fetch","method","headers","Accept","response","json","data","lat","coord","lon","error","getWeatherData","current","temp","daily","hourly","clouds","wind_speed","weather","main","isLoaded","handleInput","event","target","value","handleSubmit","Math","round","BurgerMenu","active","burger","color","scale","marginTop","NavBar","toggleNavbar","isActive","Burger","href","Header","DailyTable","maxC","minC","WeatherCard","unixConverter","unixDay","unixConverterHour","unixHour","slice","map","dt","icon","degrees","max","min","Mobile","Desktop","Body","LandingPage","App","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.96c43cfb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nlet initialState = new Date().toLocaleString('en-US', {\n  day: 'numeric',\n  month: 'short',\n  hour: 'numeric',\n  minute: 'numeric',\n  weekday: 'short',\n});\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: []\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      time: initialState\n    });\n    this.intervalID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n  tick() {\n    this.setState({\n      time: new Date().toLocaleString('en-US', {\n        day: 'numeric',\n        month: 'short',\n        hour: 'numeric',\n        minute: 'numeric',\n        weekday: 'short',\n      })\n    });\n  }\n  render() {\n    return <p>{this.state.time}</p>;\n  }\n}\n\nexport default Clock;\n","import React, { Component } from 'react';\nimport './DesktopDetails.scss';\nimport Clock from '../Clock/Clock';\n\nclass DesktopDetails extends Component {\n  render() {\n    return (\n      <div className='desktop-details'>\n        <h1 className='desktop-details__title'>{this.props.degree}</h1>\n        <div className='desktop-details__cont'>\n          <h2 className='desktop-details__location'>{this.props.location}</h2>\n          <h3 className='desktop-details__date'>\n            <Clock />\n          </h3>\n        </div>\n        <div className='desktop-details__weathercont'>\n          <img\n            className='desktop-details__icon'\n            src={this.props.src}\n            alt='icon'\n          />\n          <h3 className='desktop-details__condition'>{this.props.condition}</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DesktopDetails;\n","import React, { Component } from 'react';\nimport './SearchBar.scss';\n\nclass SearchBar extends Component {\n  render() {\n    return (\n      <div className='searchbar-cont'>\n        <div class='form__group field'>\n          <input\n            type='text'\n            className='form__field'\n            placeholder='Name'\n            name='name'\n            id='name'\n            onChange={this.props.onChange}\n            required\n          />\n          <label for='name' class='form__label'>\n            {this.props.placeholder}\n          </label>\n        </div>\n        <div className='submit' onClick={this.props.onClick}>\n          {this.props.content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport './DesktopSideBar.scss';\nimport SearchBar from '../SearchBar/SearchBar';\n\nclass DesktopSideBar extends Component {\n  render() {\n    return (\n      <div className='desktop-sidebar'>\n        <div className='desktop-sidebar-search'>\n          <SearchBar\n            onChange={this.props.onChange}\n            onClick={this.props.onClick}\n            placeholder={this.props.placeholder}\n            content={\n              <div className='button-cont'>\n                <img\n                  className='desktop-sidebar-search__button'\n                  src='/img/desktop/search.svg'\n                  alt='t3'\n                ></img>\n              </div>\n            }\n          />\n          <div className='desktop-sidebar-history'>\n            <h4 className='desktop-sidebar-history__title'>History</h4>\n            <p className='desktop-sidebar-history__result'>London</p>\n            <p className='desktop-sidebar-history__result'>Madrid</p>\n            <p className='desktop-sidebar-history__result'>Barcelona</p>\n            <p className='desktop-sidebar-history__result'>Budapest</p>\n            <p className='desktop-sidebar-history__result'>Paris</p>\n            <p className='desktop-sidebar-history__result'>Berlin</p>\n            <p className='desktop-sidebar-history__result'>Manchester</p>\n            <p className='desktop-sidebar-history__result'>Milan</p>\n          </div>\n        </div>\n        <div className='devider'></div>\n        <div className='desktop-sidebar-details'>\n          <h4 className='desktop-sidebar-details__title'>Weather Details</h4>\n          <div className='desktop-sidebar-details__items'>\n            <p>Cloudy</p>\n            <p>{this.props.cloud}</p>\n          </div>\n          <div className='desktop-sidebar-details__items'>\n            <p>Humidity</p>\n            <p>{this.props.humidity}</p>\n          </div>\n          <div className='desktop-sidebar-details__items'>\n            <p>Wind</p>\n            <p>{this.props.wind}</p>\n          </div>\n        </div>\n        <div className='devider'></div>\n      </div>\n    );\n  }\n}\n\nexport default DesktopSideBar;\n","import React, { Component } from 'react';\nimport './DesktopPage.scss';\nimport DesktopDetails from '../../Components/DesktopDetails/DesktopDetails';\nimport DesktopSideBar from '../../Components/DesktopSideBar/DesktopSideBar';\nconst API_KEY = `${process.env.REACT_APP_API_KEY}`;\n\nclass DesktopPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: '',\n      place: '',\n      lat: '',\n      lon: '',\n      humidity: '',\n      cloud: '',\n      wind: '',\n      condition: 'Cloudy',\n      isLoaded: false,\n      error: false,\n      placeholder: 'City'\n    };\n  }\n  searchCity = async () => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.place}&appid=${API_KEY}`;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      const data = await response.json();\n      this.setState({\n        lat: data.coord.lat,\n        lon: data.coord.lon,\n        placeholder: 'City'\n      });\n    } catch (error) {\n      this.setState({\n        error: true,\n        placeholder: 'Incorrect location'\n      });\n    }\n  };\n\n  getWeatherData = async () => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.lon}&units=metric&appid=${API_KEY}`;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      this.setState({\n        current: data.current.temp,\n        daily: data.daily,\n        hourly: data.hourly,\n        humidity: data.current.humidity,\n        cloud: data.current.clouds,\n        wind: data.current.wind_speed,\n        condition: data.current.weather[0].main,\n        isLoaded: true\n      });\n    } catch (error) {\n      this.setState({ isLoaded: false });\n    }\n  };\n\n  handleInput = event => {\n    this.setState({ place: event.target.value });\n  };\n\n  handleSubmit = async () => {\n    await this.searchCity();\n    await this.getWeatherData();\n  };\n\n  render() {\n    const {\n      isLoaded,\n      cloud,\n      humidity,\n      wind,\n      place,\n      current,\n      condition,\n      placeholder\n    } = this.state;\n    return (\n      <div className='desktop-cont'>\n        {isLoaded ? (\n          <DesktopDetails\n            degree={Math.round(current) + '°'}\n            location={isLoaded ? place : null}\n            src={`/img/desktop/conditions/${condition}.svg`}\n            condition={isLoaded ? condition : null}\n          />\n        ) : null}\n        <DesktopSideBar\n          placeholder={placeholder}\n          onChange={this.handleInput}\n          onClick={this.handleSubmit}\n          cloud={isLoaded ? cloud + '%' : '0%'}\n          humidity={isLoaded ? humidity + '%' : '0%'}\n          wind={isLoaded ? Math.round(wind * 3.6) + 'km/h' : '0km/h'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DesktopPage;\n","import React, { Component } from 'react';\nimport Burger from 'react-css-burger';\n\nclass BurgerMenu extends Component {\n  state = {\n    active: false\n  };\n\n  render() {\n    return (\n      <Burger\n        onClick={() => this.setState({ active: !this.state.active })}\n        active={this.state.active}\n        burger='slider'\n        color='white'\n        scale={0.8}\n        marginTop='8px'\n      />\n    );\n  }\n}\n\nexport default BurgerMenu;\n","import React, { Component } from 'react';\nimport './NavBar.scss';\nimport BurgerMenu from './Burger';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActive: false\n    };\n  }\n\n  toggleNavbar = () => {\n    this.setState({ isActive: !this.state.isActive });\n  };\n  render() {\n    return (\n      <nav className='navbar'>\n        <span className='navbar-toggle' onClick={this.toggleNavbar}>\n          <BurgerMenu />\n        </span>\n        <a href='/' className='logo'>\n          Weather Forecast\n        </a>\n        <ul className={this.state.isActive ? 'main-nav active' : 'main-nav'}>\n          <li>\n            <a href='/' className='nav-links'>\n              Home\n            </a>\n          </li>\n          <li>\n            <a href='/desktop' className='nav-links'>\n              Desktop\n            </a>\n          </li>\n          <li>\n            <a href='http://kovacskrisztian.com/' className='nav-links'>\n              About me\n            </a>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport './Header.scss';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className='header-cont'>\n        <div className='header-cont__title'>\n          <h1 className='header-cont__title__h1'>\n            The\n            <br />\n            Weather\n            <br />\n            Forecast\n          </h1>\n        </div>\n        <img\n          src='/img/header.jpg'\n          alt='clouds'\n          className='header-cont__picture'\n        />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass DailyTable extends Component {\n  render() {\n    return (\n      <tr>\n        <td>{this.props.day}</td>\n        <td>{this.props.maxC}</td>\n        <td>{this.props.minC}</td>\n      </tr>\n    );\n  }\n}\n\nexport default DailyTable;\n","import React, { Component } from 'react';\nimport './WeatherCard.scss';\nimport DailyTable from '../DailyTable/DailyTable';\nimport SearchBar from '../SearchBar/SearchBar';\nconst API_KEY = `${process.env.REACT_APP_API_KEY}`;\n\nclass WeatherCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: '',\n      hourly: [],\n      daily: [],\n      time: new Date().toLocaleString('hu-HU', { hour: 'numeric' }),\n      place: '',\n      lat: '',\n      lon: '',\n      isLoaded: false,\n      error: false,\n      placeholder: 'City'\n    };\n  }\n  searchCity = async () => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.place}&appid=${API_KEY}`;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      const data = await response.json();\n      this.setState({\n        lat: data.coord.lat,\n        lon: data.coord.lon,\n        placeholder: 'City'\n      });\n    } catch (error) {\n      this.setState({\n        error: true,\n        placeholder: 'Please give me a real location'\n      });\n    }\n  };\n\n  getWeatherData = async () => {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.lat}&lon=${this.state.lon}&units=metric&appid=${API_KEY}`;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      const data = await response.json();\n      this.setState({\n        current: data.current.temp,\n        daily: data.daily,\n        hourly: data.hourly,\n        isLoaded: true\n      });\n    } catch (error) {\n      this.setState({ isLoaded: false });\n    }\n  };\n\n  handleInput = event => {\n    this.setState({ place: event.target.value });\n  };\n\n  handleSubmit = async () => {\n    await this.searchCity();\n    await this.getWeatherData();\n  };\n\n  unixConverter = unixDay => {\n    const unixTimestamp = unixDay;\n    const milliseconds = unixTimestamp * 1000;\n    const dateObject = new Date(milliseconds);\n    return dateObject.toLocaleString('en-US', { weekday: 'long' });\n  };\n\n  unixConverterHour = unixHour => {\n    const unixTimestamp = unixHour;\n    const milliseconds = unixTimestamp * 1000;\n    const dateObject = new Date(milliseconds);\n    return dateObject.toLocaleString('hu-HU', { hour: 'numeric' });\n  };\n  render() {\n    return (\n      <div className='weather'>\n        <SearchBar\n          placeholder={this.state.placeholder}\n          content='Show'\n          onChange={this.handleInput}\n          onClick={this.handleSubmit}\n        />\n        <div\n          className={this.state.isLoaded ? 'weather-card' : 'weather-card-hide'}\n        >\n          <div className={`weather-card__bg${this.state.time}`}>\n            <div className='weather-card-header'>\n              <h1 className='weather-card-header__temperature'>\n                {Math.round(this.state.current) + '°C'}\n              </h1>\n              <p className='weather-card-header__location'>\n                {this.state.place}\n              </p>\n            </div>\n            <img src='/img/sun.png' alt='sun' className='weather-card__sun' />\n            <img\n              src='/img/moon.png'\n              alt='moon'\n              className='weather-card__moon'\n            />\n            <img\n              src='/img/cloud2.png'\n              alt='cloud'\n              className='weather-card__cloud'\n            />\n            <div className='weather-card-hourly'>\n              <table>\n                <thead>\n                  <tr>\n                    {this.state.hourly.slice(0, 15).map(hourly => (\n                      <th>{this.unixConverterHour(hourly.dt)}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    {this.state.hourly.slice(0, 15).map(hourly => (\n                      <td>\n                        <img\n                          className='weather-card-hourly__img'\n                          src={`http://openweathermap.org/img/wn/${hourly.weather[0].icon}@2x.png`}\n                          alt='icon'\n                        />\n                      </td>\n                    ))}\n                  </tr>\n                  <tr className='weather-card-hourly__degree'>\n                    {this.state.hourly.slice(0, 15).map(degrees => (\n                      <td className='weather-card-hourly__degree__data'>\n                        {Math.round(degrees.temp) + '°'}\n                      </td>\n                    ))}\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div className='weather-card-daily'>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Day</th>\n                    <th>Max</th>\n                    <th>Min</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.daily.slice(1, 8).map(data => (\n                    <DailyTable\n                      day={this.unixConverter(data.dt)}\n                      maxC={Math.round(data.temp.max) + '°C'}\n                      minC={Math.round(data.temp.min) + '°C'}\n                    />\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeatherCard;\n","import React, { Component } from 'react';\nimport WeatherCard from '../../WeatherCard/WeatherCard';\nimport './Mobile.scss';\n\nclass Mobile extends Component {\n  render() {\n    return (\n      <div className='body-cont'>\n        <div className='body-cont__maintext'>\n          <h2 className='body-cont__maintext__title'>\n            Get the recent weather data for mobile\n          </h2>\n          <p className='body-cont__maintext__desc'>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam\n          </p>\n        </div>\n        <div className='body-cont__card'>\n          <WeatherCard />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Mobile;\n","import React, { Component } from 'react';\nimport './Desktop.scss';\n\nclass Desktop extends Component {\n  render() {\n    return (\n      <div className='body-desktop'>\n        <div className='body-desktop__text'>\n          <h2 className='body-desktop__text__title'>\n            Or try the desktop version\n          </h2>\n        </div>\n        <div className='body-desktop__img'>\n          <a href=\"/desktop\">\n          <img\n            className='body-desktop__img__picture'\n            src='/img/desktop.png'\n            alt='asd'\n          />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Desktop;\n","import React, { Component } from 'react';\nimport Mobile from './Mobile/Mobile';\nimport Desktop from './Desktop/Desktop';\n\nclass Body extends Component {\n  render() {\n    return (\n      <div>\n        <Mobile />\n        <Desktop />\n      </div>\n    );\n  }\n}\n\nexport default Body;\n","import React, { Component } from 'react';\nimport NavBar from '../../Components/NavBar/NavBar';\nimport Header from '../../Components/Header/Header';\nimport Body from '../../Components/Body/Body';\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div className='main-container'>\n        <NavBar />\n        <Header />\n        <Body />\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport DesktopPage from './Pages/DesktopPage/DesktopPage';\nimport LandingPage from './Pages/LandingPage/LandingPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route path='/Weather-app' exact component={LandingPage} />\n        <Route path='/desktop' exact component={DesktopPage} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}